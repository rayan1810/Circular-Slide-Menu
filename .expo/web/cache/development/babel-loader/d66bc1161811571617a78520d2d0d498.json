{"ast":null,"code":"import ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar doLeftAndRightSwapInRTL = true;\nvar isPreferredLanguageRTL = false;\nvar isRTLAllowed = true;\nvar isRTLForced = false;\n\nvar isRTL = function isRTL() {\n  if (isRTLForced) {\n    return true;\n  }\n\n  return isRTLAllowed && isPreferredLanguageRTL;\n};\n\nvar onDirectionChange = function onDirectionChange() {\n  if (ExecutionEnvironment.canUseDOM) {\n    if (document.documentElement && document.documentElement.setAttribute) {\n      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');\n    }\n  }\n};\n\nvar I18nManager = {\n  allowRTL: function allowRTL(bool) {\n    isRTLAllowed = bool;\n    onDirectionChange();\n  },\n  forceRTL: function forceRTL(bool) {\n    isRTLForced = bool;\n    onDirectionChange();\n  },\n  getConstants: function getConstants() {\n    return {\n      doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,\n      isRTL: isRTL()\n    };\n  },\n  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {\n    isPreferredLanguageRTL = bool;\n    onDirectionChange();\n  },\n  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {\n    doLeftAndRightSwapInRTL = bool;\n  }\n};\nexport default I18nManager;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\I18nManager\\index.js"],"names":["ExecutionEnvironment","doLeftAndRightSwapInRTL","isPreferredLanguageRTL","isRTLAllowed","isRTLForced","isRTL","onDirectionChange","canUseDOM","document","documentElement","setAttribute","I18nManager","allowRTL","bool","forceRTL","getConstants","setPreferredLanguageRTL","swapLeftAndRightInRTL"],"mappings":"AASA,OAAOA,oBAAP,MAAiC,+BAAjC;AACA,IAAIC,uBAAuB,GAAG,IAA9B;AACA,IAAIC,sBAAsB,GAAG,KAA7B;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,IAAIC,WAAW,GAAG,KAAlB;;AAEA,IAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,MAAID,WAAJ,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,SAAOD,YAAY,IAAID,sBAAvB;AACD,CAND;;AAQA,IAAII,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnD,MAAIN,oBAAoB,CAACO,SAAzB,EAAoC;AAClC,QAAIC,QAAQ,CAACC,eAATD,IAA4BA,QAAQ,CAACC,eAATD,CAAyBE,YAAzD,EAAuE;AACrEF,MAAAA,QAAQ,CAACC,eAATD,CAAyBE,YAAzBF,CAAsC,KAAtCA,EAA6CH,KAAK,KAAK,KAAL,GAAa,KAA/DG;AACD;AACF;AACF,CAND;;AAQA,IAAIG,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAChCV,IAAAA,YAAY,GAAGU,IAAfV;AACAG,IAAAA,iBAAiB;AAClB,GAJe;AAKhBQ,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBD,IAAlB,EAAwB;AAChCT,IAAAA,WAAW,GAAGS,IAAdT;AACAE,IAAAA,iBAAiB;AAClB,GARe;AAShBS,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAO;AACLd,MAAAA,uBAAuB,EAAEA,uBADpB;AAELI,MAAAA,KAAK,EAAEA,KAAK;AAFP,KAAP;AAID,GAde;AAehBW,EAAAA,uBAAuB,EAAE,SAASA,uBAAT,CAAiCH,IAAjC,EAAuC;AAC9DX,IAAAA,sBAAsB,GAAGW,IAAzBX;AACAI,IAAAA,iBAAiB;AAClB,GAlBe;AAmBhBW,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BJ,IAA/B,EAAqC;AAC1DZ,IAAAA,uBAAuB,GAAGY,IAA1BZ;AACD;AArBe,CAAlB;AAuBA,eAAeU,WAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar doLeftAndRightSwapInRTL = true;\nvar isPreferredLanguageRTL = false;\nvar isRTLAllowed = true;\nvar isRTLForced = false;\n\nvar isRTL = function isRTL() {\n  if (isRTLForced) {\n    return true;\n  }\n\n  return isRTLAllowed && isPreferredLanguageRTL;\n};\n\nvar onDirectionChange = function onDirectionChange() {\n  if (ExecutionEnvironment.canUseDOM) {\n    if (document.documentElement && document.documentElement.setAttribute) {\n      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');\n    }\n  }\n};\n\nvar I18nManager = {\n  allowRTL: function allowRTL(bool) {\n    isRTLAllowed = bool;\n    onDirectionChange();\n  },\n  forceRTL: function forceRTL(bool) {\n    isRTLForced = bool;\n    onDirectionChange();\n  },\n  getConstants: function getConstants() {\n    return {\n      doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,\n      isRTL: isRTL()\n    };\n  },\n  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {\n    isPreferredLanguageRTL = bool;\n    onDirectionChange();\n  },\n  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {\n    doLeftAndRightSwapInRTL = bool;\n  }\n};\nexport default I18nManager;"]},"metadata":{},"sourceType":"module"}