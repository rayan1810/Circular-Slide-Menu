{"ast":null,"code":"import styleResolver from './styleResolver';\nvar css = {\n  create: function create(rules, group) {\n    return styleResolver.createCSS(rules, group);\n  }\n};\nexport default css;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\StyleSheet\\css.js"],"names":["styleResolver","css","create","rules","group","createCSS"],"mappings":"AAQA,OAAOA,aAAP,MAA0B,iBAA1B;AAOA,IAAIC,GAAG,GAAG;AAIRC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8B;AACpC,WAAOJ,aAAa,CAACK,SAAdL,CAAwBG,KAAxBH,EAA+BI,KAA/BJ,CAAP;AACD;AANO,CAAV;AAQA,eAAeC,GAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport styleResolver from './styleResolver';\n/**\n * A simple (and dangerous) CSS system.\n * The order of CSS rule insertion is not guaranteed.\n * Avoiding combining 2 or more classes that modify the same property.\n */\n\nvar css = {\n  /**\n   * const classes = css.create({ base: {}, extra: {} })\n   */\n  create: function create(rules, group) {\n    return styleResolver.createCSS(rules, group);\n  }\n};\nexport default css;"]},"metadata":{},"sourceType":"module"}