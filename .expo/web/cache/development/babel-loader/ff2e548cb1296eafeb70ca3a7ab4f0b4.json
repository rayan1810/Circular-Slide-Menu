{"ast":null,"code":"import * as React from 'react';\nimport Appearance from '../Appearance';\n\nvar _s = $RefreshSig$();\n\nexport default function useColorScheme() {\n  _s();\n\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(function () {\n    var listener = function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    };\n\n    Appearance.addChangeListener(listener);\n    return function () {\n      return Appearance.removeChangeListener(listener);\n    };\n  });\n  return colorScheme;\n}\n;\n\n_s(useColorScheme, \"xKQ4eXoX3djgUoDtt9xwuqrPB4E=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\useColorScheme\\index.js"],"names":["React","Appearance","useColorScheme","_React$useState","useState","getColorScheme","colorScheme","setColorScheme","useEffect","listener","appearance","addChangeListener","removeChangeListener"],"mappings":"AASA,OAAM,KAAMA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;;AACA,eAAe,SAASC,cAAT,GAA0B;;;AACvC,MAAIC,eAAe,GAAGH,KAAK,CAACI,QAANJ,CAAeC,UAAU,CAACI,cAAXJ,EAAfD,CAAtB;AAAA,MACIM,WAAW,GAAGH,eAAe,CAAC,CAAD,CADjC;AAAA,MAEII,cAAc,GAAGJ,eAAe,CAAC,CAAD,CAFpC;;AAIAH,EAAAA,KAAK,CAACQ,SAANR,CAAgB,YAAY;QACjBS,QAAQ,GAAjB,SAASA,QAAT,CAAkBC,UAAlB,EAA8B;AAC5BH,MAAAA,cAAc,CAACG,UAAU,CAACJ,WAAZ,CAAdC;AACD,K;;AAEDN,IAAAA,UAAU,CAACU,iBAAXV,CAA6BQ,QAA7BR;AACA,WAAO,YAAY;AACjB,aAAOA,UAAU,CAACW,oBAAXX,CAAgCQ,QAAhCR,CAAP;AACD,KAFD;AAGD,GATDD;AAUA,SAAOM,WAAP;AACD;AAAA;;GAhBuBJ,c,EAAc,8B","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport Appearance from '../Appearance';\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    Appearance.addChangeListener(listener);\n    return function () {\n      return Appearance.removeChangeListener(listener);\n    };\n  });\n  return colorScheme;\n}"]},"metadata":{},"sourceType":"module"}