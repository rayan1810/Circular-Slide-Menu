{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreenReaderEnabled = useScreenReaderEnabled;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction useScreenReaderEnabled() {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      enabled = _React$useState2[0],\n      setEnabled = _React$useState2[1];\n\n  var mountedRef = _react.default.useRef(false);\n\n  var handleSetEnabled = function handleSetEnabled(value) {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  _react.default.useEffect(function () {\n    mountedRef.current = true;\n\n    function setInitialValue() {\n      var res;\n      return _regenerator.default.async(function setInitialValue$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_reactNative.AccessibilityInfo.isScreenReaderEnabled());\n\n            case 2:\n              res = _context.sent;\n              handleSetEnabled(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    var handler = _reactNative.AccessibilityInfo.addEventListener('screenReaderChanged', function (event) {\n      handleSetEnabled(event);\n    });\n\n    setInitialValue();\n    return function () {\n      mountedRef.current = false;\n\n      _reactNative.AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n\n  return enabled;\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\native-base\\lib\\commonjs\\hooks\\useScreenReaderEnabled.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useScreenReaderEnabled","_regenerator","_slicedToArray2","_react","_React$useState","default","useState","_React$useState2","enabled","setEnabled","mountedRef","useRef","handleSetEnabled","current","useEffect","setInitialValue","res","async","setInitialValue$","_context","prev","next","awrap","_reactNative","AccessibilityInfo","isScreenReaderEnabled","sent","stop","Promise","handler","addEventListener","event","removeEventListener"],"mappings":"AAAA,IAAIA,sBAAsB,GAACC,OAAO,CAAC,8CAAD,CAAlC;;AAAmFC,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA8B,YAA9BA,EAA2C;AAACG,EAAAA,KAAK,EAAC;AAAP,CAA3CH;AAAyDE,OAAO,CAACE,sBAARF,GAA+BE,sBAA/BF;;AAAsD,IAAIG,YAAY,GAACP,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAvC;;AAA+E,IAAIO,eAAe,GAACR,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA1C;;AAA4F,IAAIQ,MAAM,GAACT,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAjC;;;;SAAsGK,sB,GAAwB;AAAC,MAAII,eAAe,GAACD,MAAM,CAACE,OAAPF,CAAeG,QAAfH,CAAwB,KAAxBA,CAApB;AAAA,MAAmDI,gBAAgB,GAAA,CAAE,GAAEL,eAAe,CAACG,OAApB,EAA6BD,eAA7B,EAA6C,CAA7C,CAAnE;AAAA,MAAmHI,OAAO,GAACD,gBAAgB,CAAC,CAAD,CAA3I;AAAA,MAA+IE,UAAU,GAACF,gBAAgB,CAAC,CAAD,CAA1K;;AAA8K,MAAIG,UAAU,GAACP,MAAM,CAACE,OAAPF,CAAeQ,MAAfR,CAAsB,KAAtBA,CAAf;;AAA4C,MAAIS,gBAAgB,GAAC,SAASA,gBAAT,CAA0Bb,KAA1B,EAAgC;AAAC,QAAGW,UAAU,CAACG,OAAd,EAAsB;AAACJ,MAAAA,UAAU,CAACV,KAAD,CAAVU;AAAmB;AAAC,GAAjG;;AAAkGN,EAAAA,MAAM,CAACE,OAAPF,CAAeW,SAAfX,CAAyB,YAAU;AAACO,IAAAA,UAAU,CAACG,OAAXH,GAAmB,IAAnBA;;aAAiCK,e,GAAiB;AAAC,UAAIC,GAAJ;AAAQ,aAAOf,YAAY,CAACI,OAAbJ,CAAqBgB,KAArBhB,CAA2B,SAASiB,gBAAT,CAA0BC,QAA1B,EAAmC;eAAO,C,EAAE;AAAC,kBAAOA,QAAQ,CAACC,IAATD,GAAcA,QAAQ,CAACE,IAA9B;AAAoC,iBAAK,CAAL;AAAOF,cAAAA,QAAQ,CAACE,IAATF,GAAc,CAAdA;AAAgB,qBAAOlB,YAAY,CAACI,OAAbJ,CAAqBqB,KAArBrB,CAA2BsB,YAAY,CAACC,iBAAbD,CAA+BE,qBAA/BF,EAA3BtB,CAAP;;AAA0F,iBAAK,CAAL;AAAOe,cAAAA,GAAG,GAACG,QAAQ,CAACO,IAAbV;AAAkBJ,cAAAA,gBAAgB,CAACI,GAAD,CAAhBJ;;AAAsB,iBAAK,CAAL;AAAO,iBAAI,KAAJ;AAAU,qBAAOO,QAAQ,CAACQ,IAATR,EAAP;AAArN;AAA8O;AAAC,OAAvTlB,EAAwT,IAAxTA,EAA6T,IAA7TA,EAAkU,IAAlUA,EAAuU2B,OAAvU3B,CAAP;AAAwV;;AAAA,QAAI4B,OAAO,GAACN,YAAY,CAACC,iBAAbD,CAA+BO,gBAA/BP,CAAgD,qBAAhDA,EAAsE,UAASQ,KAAT,EAAe;AAACnB,MAAAA,gBAAgB,CAACmB,KAAD,CAAhBnB;AAAyB,KAA/GW,CAAZ;;AAA6HR,IAAAA,eAAe;AAAG,WAAO,YAAU;AAACL,MAAAA,UAAU,CAACG,OAAXH,GAAmB,KAAnBA;;AAAyBa,MAAAA,YAAY,CAACC,iBAAbD,CAA+BS,mBAA/BT,CAAmD,qBAAnDA,EAAyEM,OAAzEN;AAAmF,KAA9H;AAAgI,GAAtsBpB;;AAAwsB,SAAOK,OAAP;AACh/C","sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useScreenReaderEnabled=useScreenReaderEnabled;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");function useScreenReaderEnabled(){var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),enabled=_React$useState2[0],setEnabled=_React$useState2[1];var mountedRef=_react.default.useRef(false);var handleSetEnabled=function handleSetEnabled(value){if(mountedRef.current){setEnabled(value);}};_react.default.useEffect(function(){mountedRef.current=true;function setInitialValue(){var res;return _regenerator.default.async(function setInitialValue$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator.default.awrap(_reactNative.AccessibilityInfo.isScreenReaderEnabled());case 2:res=_context.sent;handleSetEnabled(res);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);}var handler=_reactNative.AccessibilityInfo.addEventListener('screenReaderChanged',function(event){handleSetEnabled(event);});setInitialValue();return function(){mountedRef.current=false;_reactNative.AccessibilityInfo.removeEventListener('screenReaderChanged',handler);};});return enabled;}\n//# sourceMappingURL=useScreenReaderEnabled.js.map"]},"metadata":{},"sourceType":"script"}