{"ast":null,"code":"import AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o1, p1) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o1, p1);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __DEV__ = \"development\" !== 'production';\n\nvar linear = function linear(t) {\n  return t;\n};\n\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  var extrapolateRight = 'extend';\n\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n\n    return outputMax;\n  }\n\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n\n  result = easing(result);\n\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nfunction colorToRgba(input) {\n  var normalizedColor = normalizeColor(input);\n\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 4278190080) >>> 24;\n  var g = (normalizedColor & 16711680) >>> 16;\n  var b = (normalizedColor & 65280) >>> 8;\n  var a = (normalizedColor & 255) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\n\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\n\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n\n      return String(val);\n    });\n  };\n}\n\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\n\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\n\nfunction findRange(input, inputRange) {\n  var i;\n\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n\n  return i - 1;\n}\n\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically non-decreasing ' + arr);\n  }\n}\n\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\n\nvar AnimatedInterpolation1 = function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedInterpolation, _AnimatedWithChildren);\n\n  function AnimatedInterpolation(parent, config) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n\n  var _proto = AnimatedInterpolation.prototype;\n\n  _proto.__makeNative = function __makeNative() {\n    this._parent.__makeNative();\n\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    var parentValue = this._parent.__getValue();\n\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  };\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  _proto.__attach = function __attach() {\n    this._parent.__addChild(this);\n  };\n\n  _proto.__detach = function __detach() {\n    this._parent.__removeChild(this);\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__transformDataType = function __transformDataType(range) {\n    return range.map(NativeAnimatedHelper.transformDataType);\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    if (__DEV__) {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  };\n\n  return AnimatedInterpolation;\n}(AnimatedWithChildren);\n\nAnimatedInterpolation1.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation1;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\vendor\\react-native\\Animated\\nodes\\AnimatedInterpolation.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","invariant","normalizeColor","__DEV__","linear","t","createInterpolation","config","outputRange","createInterpolationFromStringOutputRange","checkInfiniteRange","inputRange","checkValidInputRange","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","normalizedColor","r","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","number","interpolations","shouldRound","isRgbOrRgba","replace","val","Math","round","String","startsWith","arr","pattern","name","AnimatedInterpolation","_AnimatedWithChildren","parent","_this","call","_parent","_config","_interpolation","_proto","__makeNative","__getValue","parentValue","__attach","__addChild","__detach","__removeChild","__transformDataType","transformDataType","__getNativeConfig","validateInterpolation","type","__createInterpolation"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n/* eslint no-bitwise: 0 */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar linear = function linear(t) {\n  return t;\n};\n/**\n * Very handy helper to map input ranges to output ranges with an easing\n * function and custom behavior outside of the ranges.\n */\n\n\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  var extrapolateRight = 'extend';\n\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input; // Extrapolate\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {// noop\n    }\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {// noop\n    }\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n\n    return outputMax;\n  } // Input Range\n\n\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  } // Easing\n\n\n  result = easing(result); // Output Range\n\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nfunction colorToRgba(input) {\n  var normalizedColor = normalizeColor(input);\n\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 0xff000000) >>> 24;\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\n  var a = (normalizedColor & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\n\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36) // colors\n *   -45deg                  // values with units\n */\n\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange); // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']\n  // ->\n  // [\n  //   [0, 50],\n  //   [100, 150],\n  //   [200, 250],\n  //   [0, 0.5],\n  // ]\n\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\n   * guard against this possibility.\n   */\n\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    /* $FlowFixMe(>=0.18.0): `value.match()` can return `null`. Need to guard\n     * against this possibility.\n     */\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex)\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need\n   * to guard against this possibility. */\n  .map(function (value, i) {\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  }); // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n  // round the opacity (4th column).\n\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0; // 'rgba(0, 100, 200, 0)'\n    // ->\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\n\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n\n      return String(val);\n    });\n  };\n}\n\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\n\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\n\nfunction findRange(input, inputRange) {\n  var i;\n\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n\n  return i - 1;\n}\n\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1],\n    /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\n     * one or both of the operands may be something that doesn't cleanly\n     * convert to a string, like undefined, null, and object, etc. If you really\n     * mean this implicit string conversion, you can do something like\n     * String(myThing)\n     */\n    'inputRange must be monotonically non-decreasing ' + arr);\n  }\n}\n\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\n  /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\n   * one or both of the operands may be something that doesn't cleanly convert\n   * to a string, like undefined, null, and object, etc. If you really mean\n   * this implicit string conversion, you can do something like\n   * String(myThing)\n   */\n  name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\n\nvar AnimatedInterpolation = /*#__PURE__*/function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedInterpolation, _AnimatedWithChildren);\n\n  // Export for testing.\n  function AnimatedInterpolation(parent, config) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n\n  var _proto = AnimatedInterpolation.prototype;\n\n  _proto.__makeNative = function __makeNative() {\n    this._parent.__makeNative();\n\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    var parentValue = this._parent.__getValue();\n\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  };\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  _proto.__attach = function __attach() {\n    this._parent.__addChild(this);\n  };\n\n  _proto.__detach = function __detach() {\n    this._parent.__removeChild(this);\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__transformDataType = function __transformDataType(range) {\n    return range.map(NativeAnimatedHelper.transformDataType);\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    if (__DEV__) {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\n\n      /* $FlowFixMe(>=0.38.0) - Flow error detected during the deployment of\n       * v0.38.0. To see the error, remove this comment and run flow */\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  };\n\n  return AnimatedInterpolation;\n}(AnimatedWithChildren);\n\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;"]},"metadata":{},"sourceType":"module"}