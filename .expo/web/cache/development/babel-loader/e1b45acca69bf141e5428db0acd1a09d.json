{"ast":null,"code":"import AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o1, p1) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o1, p1);\n}\n\nvar SpringAnimation1 = function (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    };\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  };\n\n  _proto.onUpdate = function onUpdate() {\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m));\n    var omega0 = Math.sqrt(k / m);\n    var omega1 = omega0 * Math.sqrt(1 - zeta * zeta);\n    var x0 = this._toValue - this._startPosition;\n    var position = 0;\n    var velocity = 0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      return;\n    }\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation1;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\vendor\\react-native\\Animated\\animations\\SpringAnimation.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","AnimatedValue","AnimatedValueXY","AnimatedInterpolation","Animation","SpringConfig","invariant","shouldUseNativeDriver","SpringAnimation","_Animation","config","_config$overshootClam","_config$restDisplacem","_config$restSpeedThre","_config$velocity","_config$velocity2","_config$delay","_config$isInteraction","_config$iterations","_this","call","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","_config$stiffness","_config$damping","_config$mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","_config$bounciness","_config$speed","springConfig","fromBouncinessAndSpeed","_config$tension","_config$friction","_springConfig","fromOrigamiTensionAndFriction","_proto","__getNativeAnimationConfig","_this$_initialVelocit","type","initialVelocity","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","_this2","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","stop","clearTimeout","global","cancelAnimationFrame"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n\nvar SpringAnimation = /*#__PURE__*/function (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity; // Set the initial velocity to the last velocity\n\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    }; //  If this._delay is more than 0, we start after the timeout.\n\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  }\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t)); // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    } // Conditions for stopping the spring animation\n\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;"]},"metadata":{},"sourceType":"module"}