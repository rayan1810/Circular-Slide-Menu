{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\n'use strict';\n\nvar _s = $RefreshSig$();\n\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  _s();\n\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n\n  var elementProps = _extends(supportedProps, pressEventHandlers);\n\n  return React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\n_s(TouchableWithoutFeedback, \"Uh1extYaL7tTiu9iFnChbvrMbHI=\", false, function () {\n  return [usePressEvents];\n});\n\n_c = TouchableWithoutFeedback;\nvar MemoedTouchableWithoutFeedback = React.memo(_c1 = React.forwardRef(TouchableWithoutFeedback));\n_c2 = MemoedTouchableWithoutFeedback;\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"TouchableWithoutFeedback\");\n$RefreshReg$(_c1, \"MemoedTouchableWithoutFeedback$React.memo\");\n$RefreshReg$(_c2, \"MemoedTouchableWithoutFeedback\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\TouchableWithoutFeedback\\index.js"],"names":["React","useMemo","useRef","pick","useMergeRefs","usePressEvents","forwardPropsList","accessibilityDisabled","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","children","disabled","focusable","nativeID","onBlur","onFocus","onLayout","testID","pickProps","props","TouchableWithoutFeedback","forwardedRef","delayPressIn","delayPressOut","delayLongPress","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","pressConfig","cancelable","delayPressStart","delayPressEnd","onPressStart","onPressEnd","pressEventHandlers","element","Children","only","supportedProps","ref","elementProps","Object","cloneElement","apply","concat","MemoedTouchableWithoutFeedback","memo","forwardRef","displayName"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport pick from '../../modules/pick';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nvar forwardPropsList = {\n  accessibilityDisabled: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  children: true,\n  disabled: true,\n  focusable: true,\n  nativeID: true,\n  onBlur: true,\n  onFocus: true,\n  onLayout: true,\n  testID: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction TouchableWithoutFeedback(props, forwardedRef) {\n  var delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n  var hostRef = useRef(null);\n  var pressConfig = useMemo(function () {\n    return {\n      cancelable: !rejectResponderTermination,\n      disabled: disabled,\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressStart: onPressIn,\n      onPressEnd: onPressOut\n    };\n  }, [disabled, delayPressIn, delayPressOut, delayLongPress, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var element = React.Children.only(props.children);\n  var children = [element.props.children];\n  var supportedProps = pickProps(props);\n  supportedProps.accessibilityDisabled = disabled;\n  supportedProps.focusable = !disabled && focusable !== false;\n  supportedProps.ref = useMergeRefs(forwardedRef, hostRef, element.ref);\n  var elementProps = Object.assign(supportedProps, pressEventHandlers);\n  return /*#__PURE__*/React.cloneElement.apply(React, [element, elementProps].concat(children));\n}\n\nvar MemoedTouchableWithoutFeedback = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableWithoutFeedback));\nMemoedTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\nexport default MemoedTouchableWithoutFeedback;"]},"metadata":{},"sourceType":"module"}