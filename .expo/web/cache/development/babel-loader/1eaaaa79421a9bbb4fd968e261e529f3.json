{"ast":null,"code":"import invariant from 'fbjs/lib/invariant';\n'use strict';\n\nexport function get(name) {\n  return null;\n}\nexport function getEnforcing(name) {\n  var module = get(name);\n  invariant(module != null, \"TurboModuleRegistry.getEnforcing(...): '\" + name + \"' could not be found. \" + 'Verify that a module by this name is registered in the native binary.');\n  return module;\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\vendor\\react-native\\TurboModule\\TurboModuleRegistry.js"],"names":["invariant","get","name","getEnforcing","module"],"mappings":"AAWA,OAAOA,SAAP,MAAsB,oBAAtB;AAFA;;AAGA,OAAM,SAAUC,GAAV,CAAcC,IAAd,EAAoB;AACxB,SAAO,IAAP;AACD;AACD,OAAM,SAAUC,YAAV,CAAuBD,IAAvB,EAA6B;AACjC,MAAIE,MAAM,GAAGH,GAAG,CAACC,IAAD,CAAhB;AACAF,EAAAA,SAAS,CAACI,MAAM,IAAI,IAAX,EAAiB,6CAA6CF,IAA7C,GAAoD,wBAApD,GAA+E,uEAAhG,CAATF;AACA,SAAOI,MAAP;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport invariant from 'fbjs/lib/invariant';\nexport function get(name) {\n  return null;\n}\nexport function getEnforcing(name) {\n  var module = get(name);\n  invariant(module != null, \"TurboModuleRegistry.getEnforcing(...): '\" + name + \"' could not be found. \" + 'Verify that a module by this name is registered in the native binary.');\n  return module;\n}"]},"metadata":{},"sourceType":"module"}