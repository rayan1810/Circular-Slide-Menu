{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeaheadReducer = useTypeaheadReducer;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\n\nvar _utils = require(\"./utils\");\n\nfunction useTypeaheadReducer(state, action) {\n  var type = action.type,\n      props = action.props;\n  var changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: (0, _utils.getDefaultValue)(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false\n        };\n      }\n\n      break;\n\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: (0, _utils.getDefaultValue)(props, 'isOpen'),\n        selectedItem: (0, _utils.getDefaultValue)(props, 'selectedItem'),\n        inputValue: (0, _utils.getDefaultValue)(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return (0, _extends2.default)({}, state, changes);\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\native-base\\lib\\commonjs\\components\\composites\\Typeahead\\useTypeahead\\reducer.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","useTypeaheadReducer","_extends2","stateChangeTypes","_utils","state","action","type","props","changes","ItemClick","isOpen","getDefaultValue","selectedItem","items","index","inputValue","itemToString","InputBlur","InputChange","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSelectItem","ControlledPropUpdatedSelectedItem","FunctionSetInputValue","FunctionReset","Error","default"],"mappings":"AAAA,IAAIA,uBAAuB,GAACC,OAAO,CAAC,+CAAD,CAAnC;;AAAqF,IAAIC,sBAAsB,GAACD,OAAO,CAAC,8CAAD,CAAlC;;AAAmFE,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA8B,YAA9BA,EAA2C;AAACG,EAAAA,KAAK,EAAC;AAAP,CAA3CH;AAAyDE,OAAO,CAACE,mBAARF,GAA4BE,mBAA5BF;;AAAgD,IAAIG,SAAS,GAACN,sBAAsB,CAACD,OAAO,CAAC,gCAAD,CAAR,CAApC;;AAAgF,IAAIQ,gBAAgB,GAACT,uBAAuB,CAACC,OAAO,CAAC,SAAD,CAAR,CAA5C;;AAAiE,IAAIS,MAAM,GAACT,OAAO,CAAC,SAAD,CAAlB;;SAAuCM,mB,CAAoBI,K,EAAMC,M,EAAO;AAAC,MAAIC,IAAI,GAACD,MAAM,CAACC,IAAhB;AAAA,MAAqBC,KAAK,GAACF,MAAM,CAACE,KAAlC;AAAwC,MAAIC,OAAJ;;AAAY,UAAOF,IAAP;AAAa,SAAKJ,gBAAgB,CAACO,SAAtB;AAAgCD,MAAAA,OAAO,GAAC;AAACE,QAAAA,MAAM,EAAA,CAAE,GAAEP,MAAM,CAACQ,eAAX,EAA4BJ,KAA5B,EAAkC,QAAlC,CAAP;AAAmDK,QAAAA,YAAY,EAACL,KAAK,CAACM,KAANN,CAAYF,MAAM,CAACS,KAAnBP,CAAhE;AAA0FQ,QAAAA,UAAU,EAACR,KAAK,CAACS,YAANT,CAAmBA,KAAK,CAACM,KAANN,CAAYF,MAAM,CAACS,KAAnBP,CAAnBA;AAArG,OAARC;AAA4J;;AAAM,SAAKN,gBAAgB,CAACe,SAAtB;AAAgC,UAAGb,KAAK,CAACM,MAAT,EAAgB;AAACF,QAAAA,OAAO,GAAC;AAACE,UAAAA,MAAM,EAAC;AAAR,SAARF;AAAwB;;AAAA;;AAAM,SAAKN,gBAAgB,CAACgB,WAAtB;AAAkCV,MAAAA,OAAO,GAAC;AAACE,QAAAA,MAAM,EAAC,IAAR;AAAaK,QAAAA,UAAU,EAACV,MAAM,CAACU;AAA/B,OAARP;AAAmD;;AAAM,SAAKN,gBAAgB,CAACiB,iBAAtB;AAAwC,SAAKjB,gBAAgB,CAACkB,kBAAtB;AAAyCZ,MAAAA,OAAO,GAAC;AAACE,QAAAA,MAAM,EAAA,CAAEN,KAAK,CAACM;AAAf,OAARF;AAA+B;;AAAM,SAAKN,gBAAgB,CAACmB,gBAAtB;AAAuCb,MAAAA,OAAO,GAAC;AAACE,QAAAA,MAAM,EAAC;AAAR,OAARF;AAAsB;;AAAM,SAAKN,gBAAgB,CAACoB,iBAAtB;AAAwCd,MAAAA,OAAO,GAAC;AAACE,QAAAA,MAAM,EAAC;AAAR,OAARF;AAAuB;;AAAM,SAAKN,gBAAgB,CAACqB,kBAAtB;AAAyCf,MAAAA,OAAO,GAAC;AAACI,QAAAA,YAAY,EAACP,MAAM,CAACO,YAArB;AAAkCG,QAAAA,UAAU,EAACR,KAAK,CAACS,YAANT,CAAmBF,MAAM,CAACO,YAA1BL;AAA7C,OAARC;AAA8F;;AAAM,SAAKN,gBAAgB,CAACsB,iCAAtB;AAAwD,SAAKtB,gBAAgB,CAACuB,qBAAtB;AAA4CjB,MAAAA,OAAO,GAAC;AAACO,QAAAA,UAAU,EAACV,MAAM,CAACU;AAAnB,OAARP;AAAuC;;AAAM,SAAKN,gBAAgB,CAACwB,aAAtB;AAAoClB,MAAAA,OAAO,GAAC;AAACE,QAAAA,MAAM,EAAA,CAAE,GAAEP,MAAM,CAACQ,eAAX,EAA4BJ,KAA5B,EAAkC,QAAlC,CAAP;AAAmDK,QAAAA,YAAY,EAAA,CAAE,GAAET,MAAM,CAACQ,eAAX,EAA4BJ,KAA5B,EAAkC,cAAlC,CAA/D;AAAiHQ,QAAAA,UAAU,EAAA,CAAE,GAAEZ,MAAM,CAACQ,eAAX,EAA4BJ,KAA5B,EAAkC,YAAlC;AAA3H,OAARC;AAAoL;;;AAAc,YAAM,IAAImB,KAAJ,CAAU,4CAAV,CAAN;AAA3nC;;AAA0rC,SAAM,CAAC,GAAE1B,SAAS,CAAC2B,OAAb,EAAsB,EAAtB,EAAyBxB,KAAzB,EAA+BI,OAA/B,CAAN;AACztD","sourcesContent":["var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useTypeaheadReducer=useTypeaheadReducer;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var stateChangeTypes=_interopRequireWildcard(require(\"./types\"));var _utils=require(\"./utils\");function useTypeaheadReducer(state,action){var type=action.type,props=action.props;var changes;switch(type){case stateChangeTypes.ItemClick:changes={isOpen:(0,_utils.getDefaultValue)(props,'isOpen'),selectedItem:props.items[action.index],inputValue:props.itemToString(props.items[action.index])};break;case stateChangeTypes.InputBlur:if(state.isOpen){changes={isOpen:false};}break;case stateChangeTypes.InputChange:changes={isOpen:true,inputValue:action.inputValue};break;case stateChangeTypes.ToggleButtonClick:case stateChangeTypes.FunctionToggleMenu:changes={isOpen:!state.isOpen};break;case stateChangeTypes.FunctionOpenMenu:changes={isOpen:true};break;case stateChangeTypes.FunctionCloseMenu:changes={isOpen:false};break;case stateChangeTypes.FunctionSelectItem:changes={selectedItem:action.selectedItem,inputValue:props.itemToString(action.selectedItem)};break;case stateChangeTypes.ControlledPropUpdatedSelectedItem:case stateChangeTypes.FunctionSetInputValue:changes={inputValue:action.inputValue};break;case stateChangeTypes.FunctionReset:changes={isOpen:(0,_utils.getDefaultValue)(props,'isOpen'),selectedItem:(0,_utils.getDefaultValue)(props,'selectedItem'),inputValue:(0,_utils.getDefaultValue)(props,'inputValue')};break;default:throw new Error('Reducer called without proper action type.');}return(0,_extends2.default)({},state,changes);}\n//# sourceMappingURL=reducer.js.map"]},"metadata":{},"sourceType":"script"}