{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { Box, Button, Center, HStack, Pressable } from \"native-base\";\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showMenu = _React$useState2[0],\n      setShowMenu = _React$useState2[1];\n\n  var toggleShowMenu = function toggleShowMenu() {\n    setShowMenu(!showMenu);\n  };\n\n  var diameter = 400;\n  return React.createElement(Center, {\n    h: \"100vh\",\n    bg: \"coolGray.900\"\n  }, React.createElement(Box, {\n    w: diameter + \"px\",\n    overflow: \"hidden\",\n    h: diameter / 2 + \"px\",\n    position: \"relative\"\n  }, React.createElement(Box, {\n    nativeID: showMenu ? \"menu\" : \"none\",\n    bottom: \"-\" + diameter / 2 + \"px\",\n    right: 0,\n    left: 0,\n    mx: \"auto\",\n    position: \"absolute\",\n    h: diameter + \"px\",\n    w: diameter + \"px\",\n    style: {\n      transform: [{\n        rotate: \"180deg\"\n      }]\n    }\n  }, React.createElement(Box, {\n    bg: \"coolGray.100\",\n    w: diameter + \"px\",\n    h: diameter / 2 + \"px\",\n    roundedTop: \"full\",\n    flexDir: \"row\",\n    position: \"relative\"\n  }, React.createElement(Box, {\n    position: \"absolute\"\n  }, React.createElement(Box, {\n    bg: \"red.300\",\n    size: diameter / 2 + \"px\",\n    roundedTopLeft: \"full\",\n    position: \"relative\"\n  }, React.createElement(Box, {\n    bottom: 0,\n    position: \"absolute\"\n  }, \"Hello\"))), React.createElement(Box, {\n    position: \"absolute\",\n    style: {\n      transform: [{\n        translateY: \"-\" + (diameter / 3 + 7) + \"px\"\n      }, {\n        rotate: \"45deg\"\n      }, {\n        translateX: diameter / 2 - 60 + \"px\"\n      }]\n    }\n  }, React.createElement(Box, {\n    bg: \"blue.300\",\n    size: diameter / 2 + \"px\",\n    roundedTopLeft: \"full\",\n    position: \"relative\"\n  }, React.createElement(Box, {\n    bottom: 0,\n    position: \"absolute\"\n  }, \"Hello\"))), React.createElement(Box, {\n    position: \"absolute\",\n    style: {\n      transform: [{\n        translateY: \"-\" + diameter / 3 + \"px\"\n      }, {\n        rotate: \"90deg\"\n      }, {\n        translateX: diameter / 3 + \"px\"\n      }]\n    }\n  }, React.createElement(Box, {\n    bg: \"yellow.300\",\n    size: diameter / 2 + \"px\",\n    roundedTopLeft: \"full\",\n    position: \"relative\"\n  }, React.createElement(Box, {\n    bottom: 0,\n    position: \"absolute\"\n  }, \"Hello\"))))), React.createElement(Button, {\n    onPress: toggleShowMenu,\n    mx: \"auto\",\n    mt: \"auto\"\n  }, \"Show\")));\n}","map":{"version":3,"sources":["C:/projects/portfolio/experiment-1/pages/index.js"],"names":["React","Box","Button","Center","HStack","Pressable","App","useState","showMenu","setShowMenu","toggleShowMenu","diameter","transform","rotate","translateY","translateX"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Button, Center, HStack, Pressable } from \"native-base\";\nexport default function App() {\n  const [showMenu, setShowMenu] = React.useState(false);\n  const toggleShowMenu = () => {\n    setShowMenu(!showMenu);\n  };\n  const diameter = 400;\n  return (\n    <Center h=\"100vh\" bg=\"coolGray.900\">\n      {/* <Box position=\"relative\">\n        <HStack mb=\"3\" space=\"3\">\n          <Pressable>\n            {({ isHovered }) => (\n              <Box\n                size={\"150px\"}\n                shadow=\"5\"\n                postion=\"absolute\"\n                roundedTopLeft=\"full\"\n                bg=\"indigo.500:alpha.90\"\n                left={isHovered ? \"-8px\" : \"0\"}\n                top={isHovered ? \"-8px\" : \"0\"}\n              >\n                <Center h=\"100%\">About Me</Center>\n              </Box>\n            )}\n          </Pressable>\n          <Pressable>\n            {({ isHovered }) => (\n              <Box\n                size={\"150px\"}\n                shadow=\"5\"\n                postion=\"absolute\"\n                roundedTopRight=\"full\"\n                bg=\"secondary.500:alpha.80\"\n                right={isHovered ? \"-8px\" : \"0\"}\n                top={isHovered ? \"-8px\" : \"0\"}\n              >\n                <Center h=\"100%\">Blogs</Center>\n              </Box>\n            )}\n          </Pressable>\n        </HStack>\n        <HStack space=\"3\">\n          <Pressable>\n            {({ isHovered }) => (\n              <Box\n                size={\"150px\"}\n                shadow=\"5\"\n                postion=\"absolute\"\n                roundedBottomLeft=\"full\"\n                bg=\"emerald.500:alpha.80\"\n                left={isHovered ? \"-8px\" : \"0\"}\n                bottom={isHovered ? \"-8px\" : \"0\"}\n              >\n                <Center h=\"100%\">Projects</Center>\n              </Box>\n            )}\n          </Pressable>\n          <Pressable>\n            {({ isHovered }) => (\n              <Box\n                size={\"150px\"}\n                shadow=\"5\"\n                postion=\"absolute\"\n                roundedBottomRight=\"full\"\n                bg=\"blue.500:alpha.80\"\n                right={isHovered ? \"-8px\" : \"0\"}\n                bottom={isHovered ? \"-8px\" : \"0\"}\n              >\n                <Center h=\"100%\">Socials</Center>\n              </Box>\n            )}\n          </Pressable>\n        </HStack>\n      </Box> */}\n      <Box\n        w={`${diameter}px`}\n        // bg=\"red.100\"\n        overflow=\"hidden\"\n        h={`${diameter / 2}px`}\n        position={\"relative\"}\n      >\n        <Box\n          nativeID={showMenu ? \"menu\" : \"none\"}\n          bottom={`-${diameter / 2}px`}\n          right={0}\n          left={0}\n          mx=\"auto\"\n          position={\"absolute\"}\n          h={`${diameter}px`}\n          w={`${diameter}px`}\n          style={{ transform: [{ rotate: \"180deg\" }] }}\n        >\n          <Box\n            bg=\"coolGray.100\"\n            w={`${diameter}px`}\n            h={`${diameter / 2}px`}\n            roundedTop=\"full\"\n            // overflow={\"hidden\"}\n            flexDir={\"row\"}\n            position={\"relative\"}\n          >\n            <Box position={\"absolute\"}>\n              <Box\n                bg=\"red.300\"\n                size={`${diameter / 2}px`}\n                roundedTopLeft={\"full\"}\n                position={\"relative\"}\n              >\n                <Box bottom={0} position={\"absolute\"}>\n                  Hello\n                </Box>\n              </Box>\n            </Box>\n            <Box\n              position={\"absolute\"}\n              style={{\n                transform: [\n                  { translateY: `-${diameter / 3 + 7}px` },\n                  { rotate: \"45deg\" },\n                  { translateX: `${diameter / 2 - 60}px` },\n                ],\n              }}\n            >\n              <Box\n                bg=\"blue.300\"\n                size={`${diameter / 2}px`}\n                roundedTopLeft={\"full\"}\n                position={\"relative\"}\n              >\n                <Box bottom={0} position={\"absolute\"}>\n                  Hello\n                </Box>\n              </Box>\n            </Box>\n            <Box\n              position={\"absolute\"}\n              style={{\n                transform: [\n                  { translateY: `-${diameter / 3 }px` },\n                  { rotate: \"90deg\" },\n                  { translateX: `${diameter/3}px` },\n                ],\n              }}\n            >\n              <Box\n                bg=\"yellow.300\"\n                size={`${diameter / 2}px`}\n                roundedTopLeft={\"full\"}\n                position={\"relative\"}\n              >\n                <Box bottom={0} position={\"absolute\"}>\n                  Hello\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Button onPress={toggleShowMenu} mx=\"auto\" mt=\"auto\">\n          Show\n        </Button>\n      </Box>\n    </Center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}