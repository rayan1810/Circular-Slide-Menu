{"ast":null,"code":"import * as React from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        setTimeout(function () {\n          hostNode.select();\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        hostNode.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\TextInput\\index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","React","createElement","css","forwardedProps","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","handleChange","handleFocus","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","classList","classes","textinput","style","compose","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","platformMethodsRef","setRef","ref","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        setTimeout(function () {\n          hostNode.select();\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target; // Prevent key events bubbling (see #612)\n\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        hostNode.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}