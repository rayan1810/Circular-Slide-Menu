{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useRadioGroup = useRadioGroup;\n\nvar _radio = require(\"@react-aria/radio\");\n\nvar _utils = require(\"@react-aria/utils\");\n\nvar _utils2 = require(\"@react-native-aria/utils\");\n\nfunction useRadioGroup(props, state) {\n  var params = (0, _radio.useRadioGroup)(props, state);\n  var newParams = {\n    radioGroupProps: (0, _utils.mergeProps)(params.radioGroupProps, (0, _utils2.mapDomPropsToRN)(params.radioGroupProps)),\n    labelProps: (0, _utils.mergeProps)(params.labelProps, (0, _utils2.mapDomPropsToRN)(params.labelProps))\n  };\n  return newParams;\n}","map":{"version":3,"sources":["useRadioGroup.web.ts"],"names":["params","newParams","radioGroupProps","labelProps"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAeO,SAAA,aAAA,CAAA,KAAA,EAAA,KAAA,EAGW;AAChB,MAAMA,MAAM,GAAG,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,KAAA,EAAf,KAAe,CAAf;AAEA,MAAMC,SAAS,GAAG;AAChBC,IAAAA,eAAe,EAAE,CAAA,GAAA,MAAA,CAAA,UAAA,EACfF,MAAM,CADS,eAAA,EAEf,CAAA,GAAA,OAAA,CAAA,eAAA,EAAgBA,MAAM,CAHR,eAGd,CAFe,CADD;AAKhBG,IAAAA,UAAU,EAAE,CAAA,GAAA,MAAA,CAAA,UAAA,EACVH,MAAM,CADI,UAAA,EAEV,CAAA,GAAA,OAAA,CAAA,eAAA,EAAgBA,MAAM,CAFZ,UAEV,CAFU;AALI,GAAlB;AAWA,SAAA,SAAA;AACD","sourcesContent":["import { useRadioGroup as useRadioGroupWeb } from '@react-aria/radio';\nimport { RadioGroupState } from '@react-stately/radio';\nimport { mergeProps } from '@react-aria/utils';\nimport { AriaRadioGroupProps } from '@react-types/radio';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\n\ninterface RadioGroupAria {\n  /** Props for the radio group wrapper element. */\n  radioGroupProps: any;\n  /** Props for the radio group's visible label (if any). */\n  labelProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a radio group component.\n * Radio groups allow users to select a single item from a list of mutually exclusive options.\n * @param props - Props for the radio group.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n */\nexport function useRadioGroup(\n  props: AriaRadioGroupProps,\n  state: RadioGroupState\n): RadioGroupAria {\n  const params = useRadioGroupWeb(props, state);\n\n  const newParams = {\n    radioGroupProps: mergeProps(\n      params.radioGroupProps,\n      mapDomPropsToRN(params.radioGroupProps)\n    ),\n    labelProps: mergeProps(\n      params.labelProps,\n      mapDomPropsToRN(params.labelProps)\n    ),\n  };\n\n  return newParams;\n}\n"]},"metadata":{},"sourceType":"script"}