{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useKeyboardBottomInset = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar useKeyboardBottomInset = function useKeyboardBottomInset() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      bottom = _React$useState2[0],\n      setBottom = _React$useState2[1];\n\n  var subscriptions = React.useRef([]);\n  React.useEffect(function () {\n    function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY < e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    }\n\n    if (_reactNative.Platform.OS === 'ios') {\n      subscriptions.current = [_reactNative.Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange)];\n    } else {\n      subscriptions.current = [_reactNative.Keyboard.addListener('keyboardDidHide', onKeyboardChange), _reactNative.Keyboard.addListener('keyboardDidShow', onKeyboardChange)];\n    }\n\n    return function () {\n      subscriptions.current.forEach(function (subscription) {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};\n\nexports.useKeyboardBottomInset = useKeyboardBottomInset;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\native-base\\lib\\commonjs\\utils\\useKeyboardBottomInset.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","useKeyboardBottomInset","_slicedToArray2","React","_React$useState","useState","_React$useState2","default","bottom","setBottom","subscriptions","useRef","useEffect","onKeyboardChange","e","startCoordinates","endCoordinates","screenY","height","_reactNative","Platform","OS","current","Keyboard","addListener","forEach","subscription","remove"],"mappings":"AAAA,IAAIA,uBAAuB,GAACC,OAAO,CAAC,+CAAD,CAAnC;;AAAqF,IAAIC,sBAAsB,GAACD,OAAO,CAAC,8CAAD,CAAlC;;AAAmFE,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA8B,YAA9BA,EAA2C;AAACG,EAAAA,KAAK,EAAC;AAAP,CAA3CH;AAAyDE,OAAO,CAACE,sBAARF,GAA+B,KAAK,CAApCA;;AAAsC,IAAIG,eAAe,GAACN,sBAAsB,CAACD,OAAO,CAAC,sCAAD,CAAR,CAA1C;;AAA4F,IAAIQ,KAAK,GAACT,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAjC;;;;AAA6F,IAAIM,sBAAsB,GAAC,SAASA,sBAAT,GAAiC;AAAC,MAAIG,eAAe,GAACD,KAAK,CAACE,QAANF,CAAe,CAAfA,CAApB;AAAA,MAAsCG,gBAAgB,GAAA,CAAE,GAAEJ,eAAe,CAACK,OAApB,EAA6BH,eAA7B,EAA6C,CAA7C,CAAtD;AAAA,MAAsGI,MAAM,GAACF,gBAAgB,CAAC,CAAD,CAA7H;AAAA,MAAiIG,SAAS,GAACH,gBAAgB,CAAC,CAAD,CAA3J;;AAA+J,MAAII,aAAa,GAACP,KAAK,CAACQ,MAANR,CAAa,EAAbA,CAAlB;AAAmCA,EAAAA,KAAK,CAACS,SAANT,CAAgB,YAAU;aAAUU,gB,CAAiBC,C,EAAE;AAAC,UAAGA,CAAC,CAACC,gBAAFD,IAAoBA,CAAC,CAACE,cAAFF,CAAiBG,OAAjBH,GAAyBA,CAAC,CAACC,gBAAFD,CAAmBG,OAAnE,EAA2ER,SAAS,CAACK,CAAC,CAACE,cAAFF,CAAiBI,MAAjBJ,GAAwB,CAAzB,CAATL,CAA3E,KAAqHA,SAAS,CAAC,CAAD,CAATA;AAAc;;AAAA,QAAGU,YAAY,CAACC,QAAbD,CAAsBE,EAAtBF,KAA2B,KAA9B,EAAoC;AAACT,MAAAA,aAAa,CAACY,OAAdZ,GAAsB,CAACS,YAAY,CAACI,QAAbJ,CAAsBK,WAAtBL,CAAkC,yBAAlCA,EAA4DN,gBAA5DM,CAAD,CAAtBT;AAAuG,KAA5I,MAAgJ;AAACA,MAAAA,aAAa,CAACY,OAAdZ,GAAsB,CAACS,YAAY,CAACI,QAAbJ,CAAsBK,WAAtBL,CAAkC,iBAAlCA,EAAoDN,gBAApDM,CAAD,EAAuEA,YAAY,CAACI,QAAbJ,CAAsBK,WAAtBL,CAAkC,iBAAlCA,EAAoDN,gBAApDM,CAAvE,CAAtBT;AAAqK;;AAAA,WAAO,YAAU;AAACA,MAAAA,aAAa,CAACY,OAAdZ,CAAsBe,OAAtBf,CAA8B,UAASgB,YAAT,EAAsB;AAACA,QAAAA,YAAY,CAACC,MAAbD;AAAuB,OAA5EhB;AAA+E,KAAjG;AAAmG,GAAplBP,EAAqlB,CAACM,SAAD,EAAWC,aAAX,CAArlBP;AAAgnB,SAAOK,MAAP;AAAe,CAA93B;;AAA+3BT,OAAO,CAACE,sBAARF,GAA+BE,sBAA/BF","sourcesContent":["var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useKeyboardBottomInset=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var useKeyboardBottomInset=function useKeyboardBottomInset(){var _React$useState=React.useState(0),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),bottom=_React$useState2[0],setBottom=_React$useState2[1];var subscriptions=React.useRef([]);React.useEffect(function(){function onKeyboardChange(e){if(e.startCoordinates&&e.endCoordinates.screenY<e.startCoordinates.screenY)setBottom(e.endCoordinates.height/2);else setBottom(0);}if(_reactNative.Platform.OS==='ios'){subscriptions.current=[_reactNative.Keyboard.addListener('keyboardWillChangeFrame',onKeyboardChange)];}else{subscriptions.current=[_reactNative.Keyboard.addListener('keyboardDidHide',onKeyboardChange),_reactNative.Keyboard.addListener('keyboardDidShow',onKeyboardChange)];}return function(){subscriptions.current.forEach(function(subscription){subscription.remove();});};},[setBottom,subscriptions]);return bottom;};exports.useKeyboardBottomInset=useKeyboardBottomInset;\n//# sourceMappingURL=useKeyboardBottomInset.js.map"]},"metadata":{},"sourceType":"script"}