{"ast":null,"code":"import * as React from 'react';\nimport ModalPortal from './ModalPortal';\nimport ModalAnimation from './ModalAnimation';\nimport ModalContent from './ModalContent';\nimport ModalFocusTrap from './ModalFocusTrap';\nvar uniqueModalIdentifier = 0;\nvar activeModalStack = [];\nvar activeModalListeners = {};\n\nfunction notifyActiveModalListeners() {\n  if (activeModalStack.length === 0) {\n    return;\n  }\n\n  var activeModalId = activeModalStack[activeModalStack.length - 1];\n  activeModalStack.forEach(function (modalId) {\n    if (modalId in activeModalListeners) {\n      activeModalListeners[modalId](modalId === activeModalId);\n    }\n  });\n}\n\nfunction removeActiveModal(modalId) {\n  if (modalId in activeModalListeners) {\n    activeModalListeners[modalId](false);\n    delete activeModalListeners[modalId];\n  }\n\n  var index = activeModalStack.indexOf(modalId);\n\n  if (index !== -1) {\n    activeModalStack.splice(index, 1);\n    notifyActiveModalListeners();\n  }\n}\n\nfunction addActiveModal(modalId, listener) {\n  removeActiveModal(modalId);\n  activeModalStack.push(modalId);\n  activeModalListeners[modalId] = listener;\n  notifyActiveModalListeners();\n}\n\nvar Modal = React.forwardRef(function (props, forwardedRef) {\n  var animationType = props.animationType,\n      children = props.children,\n      onDismiss = props.onDismiss,\n      onRequestClose = props.onRequestClose,\n      onShow = props.onShow,\n      transparent = props.transparent,\n      _props$visible = props.visible,\n      visible = _props$visible === void 0 ? true : _props$visible;\n  var modalId = React.useMemo(function () {\n    return uniqueModalIdentifier++;\n  }, []);\n\n  var _React$useState = React.useState(false),\n      isActive = _React$useState[0],\n      setIsActive = _React$useState[1];\n\n  var onDismissCallback = React.useCallback(function () {\n    removeActiveModal(modalId);\n\n    if (onDismiss) {\n      onDismiss();\n    }\n  }, [modalId, onDismiss]);\n  var onShowCallback = React.useCallback(function () {\n    addActiveModal(modalId, setIsActive);\n\n    if (onShow) {\n      onShow();\n    }\n  }, [modalId, onShow]);\n  React.useEffect(function () {\n    return function () {\n      return removeActiveModal(modalId);\n    };\n  }, [modalId]);\n  return React.createElement(ModalPortal, null, React.createElement(ModalAnimation, {\n    animationType: animationType,\n    onDismiss: onDismissCallback,\n    onShow: onShowCallback,\n    visible: visible\n  }, React.createElement(ModalFocusTrap, {\n    active: isActive\n  }, React.createElement(ModalContent, {\n    active: isActive,\n    onRequestClose: onRequestClose,\n    ref: forwardedRef,\n    transparent: transparent\n  }, children))));\n});\nexport default Modal;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\Modal\\index.js"],"names":["React","ModalPortal","ModalAnimation","ModalContent","ModalFocusTrap","uniqueModalIdentifier","activeModalStack","activeModalListeners","notifyActiveModalListeners","length","activeModalId","forEach","modalId","removeActiveModal","index","indexOf","splice","addActiveModal","listener","push","Modal","forwardRef","props","forwardedRef","animationType","children","onDismiss","onRequestClose","onShow","transparent","_props$visible","visible","useMemo","_React$useState","useState","isActive","setIsActive","onDismissCallback","useCallback","onShowCallback","useEffect","createElement","active","ref"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport ModalPortal from './ModalPortal';\nimport ModalAnimation from './ModalAnimation';\nimport ModalContent from './ModalContent';\nimport ModalFocusTrap from './ModalFocusTrap';\nvar uniqueModalIdentifier = 0;\nvar activeModalStack = [];\nvar activeModalListeners = {};\n\nfunction notifyActiveModalListeners() {\n  if (activeModalStack.length === 0) {\n    return;\n  }\n\n  var activeModalId = activeModalStack[activeModalStack.length - 1];\n  activeModalStack.forEach(function (modalId) {\n    if (modalId in activeModalListeners) {\n      activeModalListeners[modalId](modalId === activeModalId);\n    }\n  });\n}\n\nfunction removeActiveModal(modalId) {\n  if (modalId in activeModalListeners) {\n    // Before removing this listener we should probably tell it\n    // that it's no longer the active modal for sure.\n    activeModalListeners[modalId](false);\n    delete activeModalListeners[modalId];\n  }\n\n  var index = activeModalStack.indexOf(modalId);\n\n  if (index !== -1) {\n    activeModalStack.splice(index, 1);\n    notifyActiveModalListeners();\n  }\n}\n\nfunction addActiveModal(modalId, listener) {\n  removeActiveModal(modalId);\n  activeModalStack.push(modalId);\n  activeModalListeners[modalId] = listener;\n  notifyActiveModalListeners();\n}\n\nvar Modal = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var animationType = props.animationType,\n      children = props.children,\n      onDismiss = props.onDismiss,\n      onRequestClose = props.onRequestClose,\n      onShow = props.onShow,\n      transparent = props.transparent,\n      _props$visible = props.visible,\n      visible = _props$visible === void 0 ? true : _props$visible; // Set a unique model identifier so we can correctly route\n  // dismissals and check the layering of modals.\n\n  var modalId = React.useMemo(function () {\n    return uniqueModalIdentifier++;\n  }, []);\n\n  var _React$useState = React.useState(false),\n      isActive = _React$useState[0],\n      setIsActive = _React$useState[1];\n\n  var onDismissCallback = React.useCallback(function () {\n    removeActiveModal(modalId);\n\n    if (onDismiss) {\n      onDismiss();\n    }\n  }, [modalId, onDismiss]);\n  var onShowCallback = React.useCallback(function () {\n    addActiveModal(modalId, setIsActive);\n\n    if (onShow) {\n      onShow();\n    }\n  }, [modalId, onShow]);\n  React.useEffect(function () {\n    return function () {\n      return removeActiveModal(modalId);\n    };\n  }, [modalId]);\n  return /*#__PURE__*/React.createElement(ModalPortal, null, /*#__PURE__*/React.createElement(ModalAnimation, {\n    animationType: animationType,\n    onDismiss: onDismissCallback,\n    onShow: onShowCallback,\n    visible: visible\n  }, /*#__PURE__*/React.createElement(ModalFocusTrap, {\n    active: isActive\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    active: isActive,\n    onRequestClose: onRequestClose,\n    ref: forwardedRef,\n    transparent: transparent\n  }, children))));\n});\nexport default Modal;"]},"metadata":{},"sourceType":"module"}