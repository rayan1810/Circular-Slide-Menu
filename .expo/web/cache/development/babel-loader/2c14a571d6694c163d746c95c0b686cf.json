{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\n\nvar Linking1 = function () {\n  function Linking() {\n    var _this = this;\n\n    this._eventCallbacks = {};\n\n    this.addEventListener = function (event, callback) {\n      if (!_this._eventCallbacks[event]) {\n        _this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      _this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = function (event, callback) {\n      var callbacks = _this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      _this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  var _proto = Linking.prototype;\n\n  _proto._dispatchEvent = function _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(function (listener) {\n        listener.apply(void 0, data);\n      });\n    }\n  };\n\n  _proto.canOpenURL = function canOpenURL() {\n    return Promise.resolve(true);\n  };\n\n  _proto.getInitialURL = function getInitialURL() {\n    return Promise.resolve(initialURL);\n  };\n\n  _proto.openURL = function openURL(url) {\n    try {\n      open(url);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto._validateURL = function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  };\n\n  return Linking;\n}();\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    window.open(urlToOpen, '_blank', 'noopener');\n  }\n};\n\nexport default new Linking1();","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\Linking\\index.js"],"names":["canUseDOM","invariant","initialURL","window","location","href","Linking","_this","_eventCallbacks","addEventListener","event","callback","push","removeEventListener","callbacks","filteredCallbacks","filter","c","toString","_proto","prototype","_dispatchEvent","_len","arguments","length","data","Array","_key","listeners","isArray","map","listener","apply","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","urlToOpen","URL"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\n\nvar Linking = /*#__PURE__*/function () {\n  function Linking() {\n    var _this = this;\n\n    this._eventCallbacks = {};\n\n    this.addEventListener = function (event, callback) {\n      if (!_this._eventCallbacks[event]) {\n        _this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      _this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = function (event, callback) {\n      var callbacks = _this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      _this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  var _proto = Linking.prototype;\n\n  _proto._dispatchEvent = function _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(function (listener) {\n        listener.apply(void 0, data);\n      });\n    }\n  }\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n  ;\n\n  _proto.canOpenURL = function canOpenURL() {\n    return Promise.resolve(true);\n  };\n\n  _proto.getInitialURL = function getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully\n   */\n  ;\n\n  _proto.openURL = function openURL(url) {\n    try {\n      open(url);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto._validateURL = function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  };\n\n  return Linking;\n}();\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    window.open(urlToOpen, '_blank', 'noopener');\n  }\n};\n\nexport default new Linking();"]},"metadata":{},"sourceType":"module"}