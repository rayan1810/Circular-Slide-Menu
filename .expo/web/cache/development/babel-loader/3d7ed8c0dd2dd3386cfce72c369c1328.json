{"ast":null,"code":"var Platform = {\n  OS: 'web',\n  select: function select(obj) {\n    return 'web' in obj ? obj.web : obj.default;\n  },\n\n  get isTesting() {\n    if (\"development\" === 'test') {\n      return true;\n    }\n\n    return false;\n  }\n\n};\nexport default Platform;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\Platform\\index.js"],"names":["Platform","OS","select","obj","web","default","isTesting"],"mappings":"AASA,IAAIA,QAAQ,GAAG;AACbC,EAAAA,EAAE,EAAE,KADS;AAEbC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAC3B,WAAO,SAASA,GAAT,GAAeA,GAAG,CAACC,GAAnB,GAAyBD,GAAG,CAACE,OAApC;AACD,GAJY;;MAMTC,S,GAAY;AACd,QAhBJ,kBAgBiC,MAA7B,EAAqC;AACnC,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD;;AAZY,CAAf;AAeA,eAAeN,QAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar Platform = {\n  OS: 'web',\n  select: function select(obj) {\n    return 'web' in obj ? obj.web : obj.default;\n  },\n\n  get isTesting() {\n    if (process.env.NODE_ENV === 'test') {\n      return true;\n    }\n\n    return false;\n  }\n\n};\nexport default Platform;"]},"metadata":{},"sourceType":"module"}