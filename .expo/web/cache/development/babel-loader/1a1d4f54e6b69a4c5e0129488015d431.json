{"ast":null,"code":"import Dimensions from '../Dimensions';\n\nvar PixelRatio1 = function () {\n  function PixelRatio() {}\n\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  };\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  };\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport { PixelRatio1 as default };","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\PixelRatio\\index.js"],"names":["Dimensions","PixelRatio","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio","default"],"mappings":"AASA,OAAOA,UAAP,MAAuB,eAAvB;;AAKA,IAAIC,WAAU,GAAgB,YAAY;WAC/BA,U,GAAa,CAAE;;AAKxBA,EAAAA,UAAU,CAACC,GAAXD,GAAiB,SAASC,GAAT,GAAe;AAC9B,WAAOF,UAAU,CAACE,GAAXF,CAAe,QAAfA,EAAyBG,KAAhC;AACD,GAFDF;;AAQAA,EAAAA,UAAU,CAACG,YAAXH,GAA0B,SAASG,YAAT,GAAwB;AAChD,WAAOJ,UAAU,CAACE,GAAXF,CAAe,QAAfA,EAAyBK,SAAzBL,IAAsCC,UAAU,CAACC,GAAXD,EAA7C;AACD,GAFDA;;AASAA,EAAAA,UAAU,CAACK,yBAAXL,GAAuC,SAASK,yBAAT,CAAmCC,UAAnC,EAA+C;AACpF,WAAOC,IAAI,CAACC,KAALD,CAAWD,UAAU,GAAGN,UAAU,CAACC,GAAXD,EAAxBO,CAAP;AACD,GAFDP;;AAWAA,EAAAA,UAAU,CAACS,mBAAXT,GAAiC,SAASS,mBAAT,CAA6BH,UAA7B,EAAyC;AACxE,QAAII,KAAK,GAAGV,UAAU,CAACC,GAAXD,EAAZ;AACA,WAAOO,IAAI,CAACC,KAALD,CAAWD,UAAU,GAAGI,KAAxBH,IAAiCG,KAAxC;AACD,GAHDV;;AAKA,SAAOA,UAAP;AACD,CAxC6B,EAA9B;;AA0CA,SAASA,WAAU,IAAIW,OAAvB","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio = /*#__PURE__*/function () {\n  function PixelRatio() {}\n\n  /**\n   * Returns the device pixel density.\n   */\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  }\n  /**\n   * No equivalent for Web\n   */\n  ;\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  }\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n  ;\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n  ;\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport { PixelRatio as default };"]},"metadata":{},"sourceType":"module"}