{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from '../Dimensions';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width1 = _Dimensions$get2.width,\n          height1 = _Dimensions$get2.height,\n          fontScale1 = _Dimensions$get2.fontScale,\n          scale1 = _Dimensions$get2.scale;\n\n      return {\n        width: width1 * scale1,\n        height: height1 * scale1,\n        scale: scale1,\n        fontScale: fontScale1\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\DeviceInfo\\index.js"],"names":["canUseDOM","Dimensions","DeviceInfo","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent"],"mappings":"AAQA,SAASA,SAAT,QAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,IAAIC,UAAU,GAAG;AACfD,EAAAA,UAAU,EAAE;QACNE,oB,GAAuB;AACzB,UAAIC,eAAe,GAAGH,UAAU,CAACI,GAAXJ,CAAe,QAAfA,CAAtB;AAAA,UACIK,KAAK,GAAGF,eAAe,CAACE,KAD5B;AAAA,UAEIC,MAAM,GAAGH,eAAe,CAACG,MAF7B;AAAA,UAGIC,SAAS,GAAGJ,eAAe,CAACI,SAHhC;AAAA,UAIIC,KAAK,GAAGL,eAAe,CAACK,KAJ5B;;AAMA,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAAEA,KAHF;AAILD,QAAAA,SAAS,EAAEA;AAJN,OAAP;AAMD,KAdS;;QAgBNE,oB,GAAuB;AACzB,UAAIC,gBAAgB,GAAGV,UAAU,CAACI,GAAXJ,CAAe,QAAfA,CAAvB;AAAA,UACIK,MAAK,GAAGK,gBAAgB,CAACL,KAD7B;AAAA,UAEIC,OAAM,GAAGI,gBAAgB,CAACJ,MAF9B;AAAA,UAGIC,UAAS,GAAGG,gBAAgB,CAACH,SAHjC;AAAA,UAIIC,MAAK,GAAGE,gBAAgB,CAACF,KAJ7B;;AAMA,aAAO;AACLH,QAAAA,KAAK,EAAEA,MAAK,GAAGG,MADV;AAELF,QAAAA,MAAM,EAAEA,OAAM,GAAGE,MAFZ;AAGLA,QAAAA,KAAK,EAAEA,MAHF;AAILD,QAAAA,SAAS,EAAEA;AAJN,OAAP;AAMD;;AA7BS,GADG;;MAkCXI,M,GAAS;AACX,QAAIZ,SAAJ,EAAe;AACb,UAAIa,SAAS,CAACC,SAAd,EAAyB;AACvB,eAAOD,SAAS,CAACC,SAAVD,CAAoB,CAApBA,CAAP;AACD,OAFD,MAEO;AACL,eAAOA,SAAS,CAACE,QAAjB;AACD;AACF;AACF,GA1Cc;;MA4CXC,W,GAAc;AAEhB,WAAOhB,SAAS,GAAGa,SAAS,CAACI,YAAb,GAA4BC,SAA5C;AACD,GA/Cc;;MAiDXC,S,GAAY;AACd,WAAOnB,SAAS,GAAGa,SAAS,CAACM,SAAb,GAAyB,EAAzC;AACD;;AAnDc,CAAjB;AAsDA,eAAejB,UAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from '../Dimensions';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"module"}