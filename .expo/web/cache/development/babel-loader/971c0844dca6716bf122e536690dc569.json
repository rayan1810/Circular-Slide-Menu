{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"./../color-mode/hooks\");\n\nvar _hooks2 = require(\"../../hooks\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/core/hybrid-overlay/HybridProvider.tsx\";\n\nvar HybridProvider = function HybridProvider(_ref) {\n  var children = _ref.children,\n      _ref$options = _ref.options,\n      _ref$options$initialC = _ref$options.initialColorMode,\n      initialColorMode = _ref$options$initialC === void 0 ? 'light' : _ref$options$initialC,\n      _ref$options$accessib = _ref$options.accessibleColors,\n      isTextColorAccessible = _ref$options$accessib === void 0 ? false : _ref$options$accessib,\n      useSystemColorMode = _ref$options.useSystemColorMode,\n      colorModeManager = _ref.colorModeManager;\n\n  var _useModeManager = (0, _hooks.useModeManager)(initialColorMode, useSystemColorMode, colorModeManager),\n      colorMode = _useModeManager.colorMode,\n      setColorMode = _useModeManager.setColorMode;\n\n  var toggleColorMode = _react.default.useCallback(function () {\n    setColorMode(colorMode === 'light' ? 'dark' : 'light');\n  }, [colorMode, setColorMode]);\n\n  var _React$useState = _react.default.useState(isTextColorAccessible),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      accessibleColors = _React$useState2[0],\n      setAccessibleColors = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    var escapeKeyListener = null;\n\n    if (_reactNative.Platform.OS === 'web') {\n      escapeKeyListener = function escapeKeyListener(e) {\n        if (e.key === 'Escape') {\n          if (_hooks2.keyboardDismissHandlerManager.length() > 0) {\n            var lastHandler = _hooks2.keyboardDismissHandlerManager.pop();\n\n            lastHandler();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', escapeKeyListener);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === 'web') {\n        document.removeEventListener('keydown', escapeKeyListener);\n      }\n    };\n  }, []);\n\n  return _react.default.createElement(_Context.HybridContext.Provider, {\n    value: {\n      colorMode: {\n        colorMode: colorMode,\n        toggleColorMode: toggleColorMode,\n        setColorMode: setColorMode,\n        accessibleColors: accessibleColors,\n        setAccessibleColors: setAccessibleColors\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar _default = HybridProvider;\nexports.default = _default;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\native-base\\lib\\commonjs\\core\\hybrid-overlay\\HybridProvider.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_react","_Context","_hooks","_hooks2","_this","_jsxFileName","HybridProvider","_ref","children","_ref$options","options","_ref$options$initialC","initialColorMode","_ref$options$accessib","accessibleColors","isTextColorAccessible","useSystemColorMode","colorModeManager","_useModeManager","useModeManager","colorMode","setColorMode","toggleColorMode","useCallback","_React$useState","useState","_React$useState2","setAccessibleColors","useEffect","escapeKeyListener","_reactNative","Platform","OS","e","key","keyboardDismissHandlerManager","length","lastHandler","pop","document","addEventListener","removeEventListener","createElement","HybridContext","Provider","__self","__source","fileName","lineNumber","columnNumber","_default"],"mappings":"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","sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _Context=require(\"./Context\");var _hooks=require(\"./../color-mode/hooks\");var _hooks2=require(\"../../hooks\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/core/hybrid-overlay/HybridProvider.tsx\";var HybridProvider=function HybridProvider(_ref){var children=_ref.children,_ref$options=_ref.options,_ref$options$initialC=_ref$options.initialColorMode,initialColorMode=_ref$options$initialC===void 0?'light':_ref$options$initialC,_ref$options$accessib=_ref$options.accessibleColors,isTextColorAccessible=_ref$options$accessib===void 0?false:_ref$options$accessib,useSystemColorMode=_ref$options.useSystemColorMode,colorModeManager=_ref.colorModeManager;var _useModeManager=(0,_hooks.useModeManager)(initialColorMode,useSystemColorMode,colorModeManager),colorMode=_useModeManager.colorMode,setColorMode=_useModeManager.setColorMode;var toggleColorMode=_react.default.useCallback(function(){setColorMode(colorMode==='light'?'dark':'light');},[colorMode,setColorMode]);var _React$useState=_react.default.useState(isTextColorAccessible),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),accessibleColors=_React$useState2[0],setAccessibleColors=_React$useState2[1];_react.default.useEffect(function(){var escapeKeyListener=null;if(_reactNative.Platform.OS==='web'){escapeKeyListener=function escapeKeyListener(e){if(e.key==='Escape'){if(_hooks2.keyboardDismissHandlerManager.length()>0){var lastHandler=_hooks2.keyboardDismissHandlerManager.pop();lastHandler();}}};document.addEventListener('keydown',escapeKeyListener);}return function(){if(_reactNative.Platform.OS==='web'){document.removeEventListener('keydown',escapeKeyListener);}};},[]);return _react.default.createElement(_Context.HybridContext.Provider,{value:{colorMode:{colorMode:colorMode,toggleColorMode:toggleColorMode,setColorMode:setColorMode,accessibleColors:accessibleColors,setAccessibleColors:setAccessibleColors}},__self:_this,__source:{fileName:_jsxFileName,lineNumber:56,columnNumber:5}},children);};var _default=HybridProvider;exports.default=_default;\n//# sourceMappingURL=HybridProvider.js.map"]},"metadata":{},"sourceType":"script"}