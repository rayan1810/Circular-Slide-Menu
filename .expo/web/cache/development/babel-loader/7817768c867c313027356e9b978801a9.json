{"ast":null,"code":"import dangerousStyleValue from './dangerousStyleValue';\n\nfunction setValueForStyles(node, styles) {\n  var style = node.style;\n\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    var isCustomProperty = styleName.indexOf('--') === 0;\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nexport default setValueForStyles;","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\modules\\setValueForStyles\\index.js"],"names":["dangerousStyleValue","setValueForStyles","node","styles","style","styleName","hasOwnProperty","isCustomProperty","indexOf","styleValue","setProperty"],"mappings":"AAWA,OAAOA,mBAAP,MAAgC,uBAAhC;;AAOG,SAEMC,iBAFN,CAEwBC,IAFxB,EAE8BC,MAF9B,EAEsC;AACvC,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;;AAEA,OAAK,IAAIC,SAAT,IAAsBF,MAAtB,EAA8B;AAC5B,QAAE,CAAGA,MAAM,CAACG,cAAPH,CAAsBE,SAAtBF,CAAL,EAAuC;AACrC;AACD;;AAED,QAAII,gBAAgB,GAAGF,SAAS,CAACG,OAAVH,CAAkB,IAAlBA,MAA4B,CAAnD;AACA,QAAII,UAAU,GAAGT,mBAAmB,CAACK,SAAD,EAAYF,MAAM,CAACE,SAAD,CAAlB,EAA+BE,gBAA/B,CAApC;;AAEA,QAAIF,SAAS,KAAK,OAAlB,EAA2B;AACzBA,MAAAA,SAAS,GAAG,UAAZA;AACD;;AAED,QAAIE,gBAAJ,EAAsB;AACpBH,MAAAA,KAAK,CAACM,WAANN,CAAkBC,SAAlBD,EAA6BK,UAA7BL;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,CAACC,SAAD,CAALD,GAAmBK,UAAnBL;AACD;AACF;AACF;;AAED,eAAeH,iBAAf","sourcesContent":["/* eslint-disable */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.3.0\n * \n */\nimport dangerousStyleValue from './dangerousStyleValue';\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\n\nfunction setValueForStyles(node, styles) {\n  var style = node.style;\n\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    var isCustomProperty = styleName.indexOf('--') === 0;\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nexport default setValueForStyles;"]},"metadata":{},"sourceType":"module"}