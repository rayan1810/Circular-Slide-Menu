{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useResolvedFontFamily = useResolvedFontFamily;\n\nvar _useTheme2 = require(\"./useTheme\");\n\nfunction useResolvedFontFamily(props) {\n  var fontFamily = props.fontFamily,\n      fontStyle = props.fontStyle,\n      fontWeight = props.fontWeight;\n  var newFontFamily = fontFamily;\n  var newFontStyle = fontStyle;\n  var newFontWeight = fontWeight;\n\n  var _useTheme = (0, _useTheme2.useTheme)(),\n      fontConfig = _useTheme.fontConfig,\n      fontWeights = _useTheme.fontWeights,\n      fonts = _useTheme.fonts;\n\n  if (fontWeight && fontStyle && fontFamily && fontFamily in fonts) {\n    var fontToken = fonts[fontFamily];\n\n    if (fontConfig && fontConfig[fontToken]) {\n      newFontWeight = undefined;\n      newFontStyle = undefined;\n      var fontWeightNumber = fontWeight in fontWeights ? fontWeights[fontWeight] : fontWeight;\n      var fontVariant = fontConfig[fontToken][fontWeightNumber];\n\n      if (typeof fontVariant === 'object') {\n        if (fontVariant[fontStyle]) newFontFamily = fontVariant[fontStyle];\n      } else {\n        newFontFamily = fontVariant;\n      }\n    } else {\n      newFontFamily = fonts[fontFamily];\n    }\n  }\n\n  return {\n    fontFamily: newFontFamily,\n    fontWeight: newFontWeight,\n    fontStyle: newFontStyle\n  };\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\native-base\\lib\\commonjs\\hooks\\useResolvedFontFamily.js"],"names":["Object","defineProperty","exports","value","useResolvedFontFamily","_useTheme2","require","props","fontFamily","fontStyle","fontWeight","newFontFamily","newFontStyle","newFontWeight","_useTheme","useTheme","fontConfig","fontWeights","fonts","fontToken","undefined","fontWeightNumber","fontVariant"],"mappings":"AAAAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA8B,YAA9BA,EAA2C;AAACG,EAAAA,KAAK,EAAC;AAAP,CAA3CH;AAAyDE,OAAO,CAACE,qBAARF,GAA8BE,qBAA9BF;;AAAoD,IAAIG,UAAU,GAACC,OAAO,CAAC,YAAD,CAAtB;;SAA8CF,qB,CAAsBG,K,EAAM;AAAC,MAAIC,UAAU,GAACD,KAAK,CAACC,UAArB;AAAA,MAAgCC,SAAS,GAACF,KAAK,CAACE,SAAhD;AAAA,MAA0DC,UAAU,GAACH,KAAK,CAACG,UAA3E;AAAsF,MAAIC,aAAa,GAACH,UAAlB;AAA6B,MAAII,YAAY,GAACH,SAAjB;AAA2B,MAAII,aAAa,GAACH,UAAlB;;AAA6B,MAAII,SAAS,GAAA,CAAE,GAAET,UAAU,CAACU,QAAf,GAAb;AAAA,MAAwCC,UAAU,GAACF,SAAS,CAACE,UAA7D;AAAA,MAAwEC,WAAW,GAACH,SAAS,CAACG,WAA9F;AAAA,MAA0GC,KAAK,GAACJ,SAAS,CAACI,KAA1H;;AAAgI,MAAGR,UAAU,IAAED,SAAZC,IAAuBF,UAAvBE,IAAmCF,UAAU,IAAIU,KAApD,EAA0D;AAAC,QAAIC,SAAS,GAACD,KAAK,CAACV,UAAD,CAAnB;;AAAgC,QAAGQ,UAAU,IAAEA,UAAU,CAACG,SAAD,CAAzB,EAAqC;AAACN,MAAAA,aAAa,GAACO,SAAdP;AAAwBD,MAAAA,YAAY,GAACQ,SAAbR;AAAuB,UAAIS,gBAAgB,GAACX,UAAU,IAAIO,WAAdP,GAA0BO,WAAW,CAACP,UAAD,CAArCA,GAAkDA,UAAvE;AAAkF,UAAIY,WAAW,GAACN,UAAU,CAACG,SAAD,CAAVH,CAAsBK,gBAAtBL,CAAhB;;AAAwD,UAAG,OAAOM,WAAP,KAAqB,QAAxB,EAAiC;AAAC,YAAGA,WAAW,CAACb,SAAD,CAAd,EAA0BE,aAAa,GAACW,WAAW,CAACb,SAAD,CAAzBE;AAAsC,OAAlG,MAAsG;AAACA,QAAAA,aAAa,GAACW,WAAdX;AAA2B;AAAC,KAAlW,MAAsW;AAACA,MAAAA,aAAa,GAACO,KAAK,CAACV,UAAD,CAAnBG;AAAiC;AAAC;;AAAA,SAAM;AAACH,IAAAA,UAAU,EAACG,aAAZ;AAA0BD,IAAAA,UAAU,EAACG,aAArC;AAAmDJ,IAAAA,SAAS,EAACG;AAA7D,GAAN;AACv8B","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});exports.useResolvedFontFamily=useResolvedFontFamily;var _useTheme2=require(\"./useTheme\");function useResolvedFontFamily(props){var fontFamily=props.fontFamily,fontStyle=props.fontStyle,fontWeight=props.fontWeight;var newFontFamily=fontFamily;var newFontStyle=fontStyle;var newFontWeight=fontWeight;var _useTheme=(0,_useTheme2.useTheme)(),fontConfig=_useTheme.fontConfig,fontWeights=_useTheme.fontWeights,fonts=_useTheme.fonts;if(fontWeight&&fontStyle&&fontFamily&&fontFamily in fonts){var fontToken=fonts[fontFamily];if(fontConfig&&fontConfig[fontToken]){newFontWeight=undefined;newFontStyle=undefined;var fontWeightNumber=fontWeight in fontWeights?fontWeights[fontWeight]:fontWeight;var fontVariant=fontConfig[fontToken][fontWeightNumber];if(typeof fontVariant==='object'){if(fontVariant[fontStyle])newFontFamily=fontVariant[fontStyle];}else{newFontFamily=fontVariant;}}else{newFontFamily=fonts[fontFamily];}}return{fontFamily:newFontFamily,fontWeight:newFontWeight,fontStyle:newFontStyle};}\n//# sourceMappingURL=useResolvedFontFamily.js.map"]},"metadata":{},"sourceType":"script"}