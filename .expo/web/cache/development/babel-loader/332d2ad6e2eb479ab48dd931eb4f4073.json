{"ast":null,"code":"import NativeAnimatedHelper from '../NativeAnimatedHelper';\n'use strict';\n\nvar startNativeAnimationNextId = 1;\n\nvar Animation1 = function () {\n  var Animation = function Animation() {};\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation1;\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\vendor\\react-native\\Animated\\animations\\Animation.js"],"names":["NativeAnimatedHelper","startNativeAnimationNextId","Animation","_proto","prototype","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind","e","unsetWaitingForIdentifier"],"mappings":"AAWA,OAAOA,oBAAP,MAAiC,yBAAjC;AAFA;;AAGA,IAAIC,0BAA0B,GAAG,CAAjC;;AAIA,IAAIC,UAAS,GAAgB,YAAY;MAC9BA,SAAS,GAAlB,SAASA,SAAT,GAAqB,CAAE,C;;AAEvB,MAAIC,MAAM,GAAGD,SAAS,CAACE,SAAvB;;AAEAD,EAAAA,MAAM,CAACE,KAAPF,GAAe,SAASE,KAAT,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,iBAA3C,EAA8DC,aAA9D,EAA6E,CAAE,CAA9FP;;AAEAA,EAAAA,MAAM,CAACQ,IAAPR,GAAc,SAASQ,IAAT,GAAgB;AAC5B,QAAI,KAAKC,UAAT,EAAqB;AACnBZ,MAAAA,oBAAoB,CAACa,GAArBb,CAAyBc,aAAzBd,CAAuC,KAAKY,UAA5CZ;AACD;AACF,GAJDG;;AAMAA,EAAAA,MAAM,CAACY,0BAAPZ,GAAoC,SAASY,0BAAT,GAAsC;AAGxE,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACA,GAJFb;;AAOAA,EAAAA,MAAM,CAACc,gBAAPd,GAA0B,SAASc,gBAAT,CAA0BC,MAA1B,EAAkC;AAC1D,QAAIV,KAAK,GAAG,KAAKW,OAAjB;AACA,SAAKA,OAAL,GAAe,IAAf;AACAX,IAAAA,KAAK,IAAIA,KAAK,CAACU,MAAD,CAAdV;AACD,GAJDL;;AAMAA,EAAAA,MAAM,CAACiB,sBAAPjB,GAAgC,SAASiB,sBAAT,CAAgCV,aAAhC,EAA+C;AAC7E,QAAIW,0BAA0B,GAAGpB,0BAA0B,GAAG,iBAA9D;AACAA,IAAAA,0BAA0B,IAAI,CAA9BA;AACAD,IAAAA,oBAAoB,CAACa,GAArBb,CAAyBsB,uBAAzBtB,CAAiDqB,0BAAjDrB;;AAEA,QAAI;AACFU,MAAAA,aAAa,CAACa,YAAdb;;AAEA,WAAKE,UAAL,GAAkBZ,oBAAoB,CAACwB,sBAArBxB,EAAlB;AACAA,MAAAA,oBAAoB,CAACa,GAArBb,CAAyByB,kBAAzBzB,CAA4C,KAAKY,UAAjDZ,EAA6DU,aAAa,CAACgB,cAAdhB,EAA7DV,EAA6F,KAAKe,0BAAL,EAA7Ff,EAAgI,KAAKiB,gBAAL,CAAsBU,IAAtB,CAA2B,IAA3B,CAAhI3B;AACD,KALD,CAKE,OAAO4B,CAAP,EAAU;AACV,YAAMA,CAAN;AACD,KAPD,SAOU;AACR5B,MAAAA,oBAAoB,CAACa,GAArBb,CAAyB6B,yBAAzB7B,CAAmDqB,0BAAnDrB;AACD;AACF,GAfDG;;AAiBA,SAAOD,SAAP;AACD,CA5C4B,EAA7B;;AA8CA,eAAeA,UAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n  ;\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}