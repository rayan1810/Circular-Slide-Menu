{"ast":null,"code":"import Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\n'use strict';\n\nvar _s = $RefreshSig$();\n\nexport default function useWindowDimensions() {\n  _s();\n\n  var _useState = useState(function () {\n    return Dimensions.get('window');\n  }),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  useEffect(function () {\n    var handleChange = function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    };\n\n    Dimensions.addEventListener('change', handleChange);\n    setDims(Dimensions.get('window'));\n    return function () {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}\n;\n\n_s(useWindowDimensions, \"4tI4JLzHgp5q64Rmd0WKsQLo0bQ=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\useWindowDimensions\\index.js"],"names":["Dimensions","useEffect","useState","useWindowDimensions","_useState","get","dims","setDims","handleChange","_ref","window","addEventListener","removeEventListener"],"mappings":"AAWA,OAAOA,UAAP,MAAuB,eAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAHA;;;;AAIA,eAAe,SAASC,mBAAT,GAA+B;;;AAC5C,MAAIC,SAAS,GAAGF,QAAQ,CAAC,YAAY;AACnC,WAAOF,UAAU,CAACK,GAAXL,CAAe,QAAfA,CAAP;AACD,GAFuB,CAAxB;AAAA,MAGIM,IAAI,GAAGF,SAAS,CAAC,CAAD,CAHpB;AAAA,MAIIG,OAAO,GAAGH,SAAS,CAAC,CAAD,CAJvB;;AAMAH,EAAAA,SAAS,CAAC,YAAY;QACXO,YAAY,GAArB,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,UAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;AAEA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClBH,QAAAA,OAAO,CAACG,MAAD,CAAPH;AACD;AACF,K;;AAEDP,IAAAA,UAAU,CAACW,gBAAXX,CAA4B,QAA5BA,EAAsCQ,YAAtCR;AAIAO,IAAAA,OAAO,CAACP,UAAU,CAACK,GAAXL,CAAe,QAAfA,CAAD,CAAPO;AACA,WAAO,YAAY;AACjBP,MAAAA,UAAU,CAACY,mBAAXZ,CAA+B,QAA/BA,EAAyCQ,YAAzCR;AACD,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAATC;AAkBA,SAAOK,IAAP;AACD;AAAA;;GA1BuBH,mB,EAAmB,8B","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(function () {\n    return Dimensions.get('window');\n  }),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  useEffect(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n\n    setDims(Dimensions.get('window'));\n    return function () {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}"]},"metadata":{},"sourceType":"module"}