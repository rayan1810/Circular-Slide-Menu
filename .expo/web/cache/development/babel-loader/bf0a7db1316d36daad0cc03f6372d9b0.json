{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCheckboxGroup = useCheckboxGroup;\n\nvar _checkbox = require(\"@react-aria/checkbox\");\n\nvar _utils = require(\"@react-native-aria/utils\");\n\nfunction useCheckboxGroup(props, state) {\n  var params = (0, _checkbox.useCheckboxGroup)(props, state);\n  return {\n    labelProps: _objectSpread(_objectSpread({}, params.labelProps), (0, _utils.mapDomPropsToRN)(params.labelProps)),\n    groupProps: _objectSpread(_objectSpread({}, params.groupProps), (0, _utils.mapDomPropsToRN)(params.groupProps))\n  };\n}","map":{"version":3,"sources":["useCheckboxGroup.web.ts"],"names":["params","labelProps","groupProps"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAGA,IAAA,MAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAeO,SAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,EAGc;AACnB,MAAMA,MAAM,GAAG,CAAA,GAAA,SAAA,CAAA,gBAAA,EAAA,KAAA,EAAf,KAAe,CAAf;AACA,SAAO;AACLC,IAAAA,UAAU,kCACLD,MAAM,CADC,UAAF,GAEL,CAAA,GAAA,MAAA,CAAA,eAAA,EAAgBA,MAAM,CAAtB,UAAA,CAFK,CADL;AAKLE,IAAAA,UAAU,kCACLF,MAAM,CADC,UAAF,GAEL,CAAA,GAAA,MAAA,CAAA,eAAA,EAAgBA,MAAM,CAAtB,UAAA,CAFK;AALL,GAAP;AAUD","sourcesContent":["import { useCheckboxGroup as useCheckboxGroupWeb } from '@react-aria/checkbox';\nimport { AriaCheckboxGroupProps } from '@react-types/checkbox';\nimport { CheckboxGroupState } from '@react-stately/checkbox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\n\ninterface CheckboxGroupAria {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: any;\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(\n  props: AriaCheckboxGroupProps,\n  state: CheckboxGroupState\n): CheckboxGroupAria {\n  const params = useCheckboxGroupWeb(props, state);\n  return {\n    labelProps: {\n      ...params.labelProps,\n      ...mapDomPropsToRN(params.labelProps),\n    },\n    groupProps: {\n      ...params.groupProps,\n      ...mapDomPropsToRN(params.groupProps),\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}