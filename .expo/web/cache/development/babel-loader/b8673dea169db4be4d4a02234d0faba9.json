{"ast":null,"code":"var emptyObject = {};\nvar objects = {};\nvar prefix = 'r';\nvar uniqueID = 1;\n\nvar createKey = function createKey(id) {\n  return prefix + \"-\" + id;\n};\n\nvar ReactNativePropRegistry1 = function () {\n  var ReactNativePropRegistry = function ReactNativePropRegistry() {};\n\n  ReactNativePropRegistry.register = function register(object) {\n    var id = uniqueID++;\n\n    if (\"development\" !== 'production') {\n      Object.freeze(object);\n    }\n\n    var key = createKey(id);\n    objects[key] = object;\n    return id;\n  };\n\n  ReactNativePropRegistry.getByID = function getByID(id) {\n    if (!id) {\n      return emptyObject;\n    }\n\n    var key = createKey(id);\n    var object = objects[key];\n\n    if (!object) {\n      console.warn('Invalid style with id `' + id + '`. Skipping ...');\n      return emptyObject;\n    }\n\n    return object;\n  };\n\n  return ReactNativePropRegistry;\n}();\n\nexport { ReactNativePropRegistry1 as default };\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:\\projects\\portfolio\\experiment-1\\node_modules\\react-native-web\\dist\\exports\\StyleSheet\\ReactNativePropRegistry.js"],"names":["emptyObject","objects","prefix","uniqueID","createKey","id","ReactNativePropRegistry","register","object","Object","freeze","key","getByID","console","warn","default"],"mappings":"AASA,IAAIA,WAAW,GAAG,EAAlB;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,EAAnB,EAAuB;AACrC,SAAOH,MAAM,GAAG,GAATA,GAAeG,EAAtB;AACD,CAFD;;AAIA,IAAIC,wBAAuB,GAAgB,YAAY;MAC5CA,uBAAuB,GAAhC,SAASA,uBAAT,GAAmC,CAAE,C;;AAErCA,EAAAA,uBAAuB,CAACC,QAAxBD,GAAmC,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC3D,QAAIH,EAAE,GAAGF,QAAQ,EAAjB;;AAEA,QAxBJ,kBAwBiC,YAA7B,EAA2C;AACzCM,MAAAA,MAAM,CAACC,MAAPD,CAAcD,MAAdC;AACD;;AAED,QAAIE,GAAG,GAAGP,SAAS,CAACC,EAAD,CAAnB;AACAJ,IAAAA,OAAO,CAACU,GAAD,CAAPV,GAAeO,MAAfP;AACA,WAAOI,EAAP;AACD,GAVDC;;AAYAA,EAAAA,uBAAuB,CAACM,OAAxBN,GAAkC,SAASM,OAAT,CAAiBP,EAAjB,EAAqB;AACrD,QAAE,CAAGA,EAAL,EAAS;AAGP,aAAOL,WAAP;AACD;;AAED,QAAIW,GAAG,GAAGP,SAAS,CAACC,EAAD,CAAnB;AACA,QAAIG,MAAM,GAAGP,OAAO,CAACU,GAAD,CAApB;;AAEA,QAAE,CAAGH,MAAL,EAAa;AACXK,MAAAA,OAAO,CAACC,IAARD,CAAa,4BAA4BR,EAA5B,GAAiC,iBAA9CQ;AACA,aAAOb,WAAP;AACD;;AAED,WAAOQ,MAAP;AACD,GAhBDF;;AAkBA,SAAOA,uBAAP;AACD,CAlC0C,EAA3C;;AAoCA,SAASA,wBAAuB,IAAIS,OAApC","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar emptyObject = {};\nvar objects = {};\nvar prefix = 'r';\nvar uniqueID = 1;\n\nvar createKey = function createKey(id) {\n  return prefix + \"-\" + id;\n};\n\nvar ReactNativePropRegistry = /*#__PURE__*/function () {\n  function ReactNativePropRegistry() {}\n\n  ReactNativePropRegistry.register = function register(object) {\n    var id = uniqueID++;\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(object);\n    }\n\n    var key = createKey(id);\n    objects[key] = object;\n    return id;\n  };\n\n  ReactNativePropRegistry.getByID = function getByID(id) {\n    if (!id) {\n      // Used in the style={[condition && id]} pattern,\n      // we want it to be a no-op when the value is false or null\n      return emptyObject;\n    }\n\n    var key = createKey(id);\n    var object = objects[key];\n\n    if (!object) {\n      console.warn('Invalid style with id `' + id + '`. Skipping ...');\n      return emptyObject;\n    }\n\n    return object;\n  };\n\n  return ReactNativePropRegistry;\n}();\n\nexport { ReactNativePropRegistry as default };"]},"metadata":{},"sourceType":"module"}